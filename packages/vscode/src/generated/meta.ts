// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "NailyZero"
export const name = "vscode-naily-ets"
export const version = "1.0.28"
export const displayName = "Naily's ArkTS Support"
export const description = "自用ArkTS扩展,支持代码跳转,欢迎PR! Naily's ArkTS Support."
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "ets.restartServer"
  | "ets.installSDK"

/**
 * Commands map registed by `NailyZero.vscode-naily-ets`
 */
export const commands = {
  /**
   * %command.restartServer%
   * @value `ets.restartServer`
   */
  etsRestartServer: "ets.restartServer",
  /**
   * %command.installSDK%
   * @value `ets.installSDK`
   */
  etsInstallSDK: "ets.installSDK",
} satisfies Record<string, CommandKey>

/**
 * Type union of all languages
 */
export type LanguageKey = 
  | "ets"

/**
 * Languages map registed by `NailyZero.vscode-naily-ets`
 */
export const languages = {
  ets: "ets",
} satisfies Record<string, LanguageKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "ets.sdkPath"
  | "ets.baseSdkPath"
  | "ets.hmsPath"
  | "ets.lspDebugMode"
  | "ets.hdcPath"
  | "ets.buildTools.autoDetect"
  | "ets.buildTools.installationType"
  | "ets.buildTools.path"
  | "ets.buildTools.manageEnvironment"
  | "ets.buildTools.environmentVariables"
  | "ets.ignoreWorkspaceLocalPropertiesFile"
  | "ets.sdkList"

export interface ConfigKeyTypeMap {
  "ets.sdkPath": string,
  "ets.baseSdkPath": string,
  "ets.hmsPath": string,
  "ets.lspDebugMode": boolean,
  "ets.hdcPath": string,
  "ets.buildTools.autoDetect": boolean,
  "ets.buildTools.installationType": ("auto" | "command-line-tools" | "deveco-studio"),
  "ets.buildTools.path": string,
  "ets.buildTools.manageEnvironment": boolean,
  "ets.buildTools.environmentVariables": { 'DEVECO_SDK_HOME'?: string; 'DevEco Studio'?: string },
  "ets.ignoreWorkspaceLocalPropertiesFile": boolean,
  "ets.sdkList": { 'API10'?: string; 'API11'?: string; 'API12'?: string; 'API13'?: string; 'API14'?: string; 'API15'?: string; 'API18'?: string; 'API20'?: string },
}

export interface ConfigShorthandMap {
  etsSdkPath: "ets.sdkPath",
  etsBaseSdkPath: "ets.baseSdkPath",
  etsHmsPath: "ets.hmsPath",
  etsLspDebugMode: "ets.lspDebugMode",
  etsHdcPath: "ets.hdcPath",
  etsBuildToolsAutoDetect: "ets.buildTools.autoDetect",
  etsBuildToolsInstallationType: "ets.buildTools.installationType",
  etsBuildToolsPath: "ets.buildTools.path",
  etsBuildToolsManageEnvironment: "ets.buildTools.manageEnvironment",
  etsBuildToolsEnvironmentVariables: "ets.buildTools.environmentVariables",
  etsIgnoreWorkspaceLocalPropertiesFile: "ets.ignoreWorkspaceLocalPropertiesFile",
  etsSdkList: "ets.sdkList",
}

export interface ConfigShorthandTypeMap {
  etsSdkPath: string,
  etsBaseSdkPath: string,
  etsHmsPath: string,
  etsLspDebugMode: boolean,
  etsHdcPath: string,
  etsBuildToolsAutoDetect: boolean,
  etsBuildToolsInstallationType: ("auto" | "command-line-tools" | "deveco-studio"),
  etsBuildToolsPath: string,
  etsBuildToolsManageEnvironment: boolean,
  etsBuildToolsEnvironmentVariables: { 'DEVECO_SDK_HOME'?: string; 'DevEco Studio'?: string },
  etsIgnoreWorkspaceLocalPropertiesFile: boolean,
  etsSdkList: { 'API10'?: string; 'API11'?: string; 'API12'?: string; 'API13'?: string; 'API14'?: string; 'API15'?: string; 'API18'?: string; 'API20'?: string },
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registered by `NailyZero.vscode-naily-ets`
 */
export const configs = {
  /**
   * %configuration.ets.sdkPath.description%
   * @key `ets.sdkPath`
   * @default `""`
   * @type `string`
   */
  etsSdkPath: {
    key: "ets.sdkPath",
    default: "",
  } as ConfigItem<"ets.sdkPath">,
  /**
   * 
   * @key `ets.baseSdkPath`
   * @default `"${os.homedir}/OpenHarmony"`
   * @type `string`
   */
  etsBaseSdkPath: {
    key: "ets.baseSdkPath",
    default: "${os.homedir}/OpenHarmony",
  } as ConfigItem<"ets.baseSdkPath">,
  /**
   * %configuration.ets.hmsPath.description%
   * @key `ets.hmsPath`
   * @default `""`
   * @type `string`
   */
  etsHmsPath: {
    key: "ets.hmsPath",
    default: "",
  } as ConfigItem<"ets.hmsPath">,
  /**
   * %configuration.ets.lspDebugMode.description%
   * @key `ets.lspDebugMode`
   * @default `false`
   * @type `boolean`
   */
  etsLspDebugMode: {
    key: "ets.lspDebugMode",
    default: false,
  } as ConfigItem<"ets.lspDebugMode">,
  /**
   * %configuration.ets.hdcPath.description%
   * @key `ets.hdcPath`
   * @default `""`
   * @type `string`
   */
  etsHdcPath: {
    key: "ets.hdcPath",
    default: "",
  } as ConfigItem<"ets.hdcPath">,
  /**
   * %configuration.ets.buildTools.autoDetect.description%
   * @key `ets.buildTools.autoDetect`
   * @default `true`
   * @type `boolean`
   */
  etsBuildToolsAutoDetect: {
    key: "ets.buildTools.autoDetect",
    default: true,
  } as ConfigItem<"ets.buildTools.autoDetect">,
  /**
   * %configuration.ets.buildTools.installationType.description%
   * @key `ets.buildTools.installationType`
   * @default `"auto"`
   * @type `string`
   */
  etsBuildToolsInstallationType: {
    key: "ets.buildTools.installationType",
    default: "auto",
  } as ConfigItem<"ets.buildTools.installationType">,
  /**
   * %configuration.ets.buildTools.path.description%
   * @key `ets.buildTools.path`
   * @default `""`
   * @type `string`
   */
  etsBuildToolsPath: {
    key: "ets.buildTools.path",
    default: "",
  } as ConfigItem<"ets.buildTools.path">,
  /**
   * %configuration.ets.buildTools.manageEnvironment.description%
   * @key `ets.buildTools.manageEnvironment`
   * @default `true`
   * @type `boolean`
   */
  etsBuildToolsManageEnvironment: {
    key: "ets.buildTools.manageEnvironment",
    default: true,
  } as ConfigItem<"ets.buildTools.manageEnvironment">,
  /**
   * %configuration.ets.buildTools.environmentVariables.description%
   * @key `ets.buildTools.environmentVariables`
   * @default `{}`
   * @type `object`
   */
  etsBuildToolsEnvironmentVariables: {
    key: "ets.buildTools.environmentVariables",
    default: {},
  } as ConfigItem<"ets.buildTools.environmentVariables">,
  /**
   * 
   * @key `ets.ignoreWorkspaceLocalPropertiesFile`
   * @default `false`
   * @type `boolean`
   */
  etsIgnoreWorkspaceLocalPropertiesFile: {
    key: "ets.ignoreWorkspaceLocalPropertiesFile",
    default: false,
  } as ConfigItem<"ets.ignoreWorkspaceLocalPropertiesFile">,
  /**
   * A list of installed OpenHarmony SDK paths. Keys should follow the pattern API[number] (e.g., API9, API10).
   * @key `ets.sdkList`
   * @default `{}`
   * @type `object`
   */
  etsSdkList: {
    key: "ets.sdkList",
    default: {},
  } as ConfigItem<"ets.sdkList">,
}

export interface ScopedConfigKeyTypeMap {
}

export const scopedConfigs = {
  scope: "vscode-naily-ets",
  defaults: {
  } satisfies ScopedConfigKeyTypeMap,
}

export interface NestedConfigs {
  "ets": {
    "sdkPath": string,
    "baseSdkPath": string,
    "hmsPath": string,
    "lspDebugMode": boolean,
    "hdcPath": string,
    "buildTools": {
      "autoDetect": boolean,
      "installationType": ("auto" | "command-line-tools" | "deveco-studio"),
      "path": string,
      "manageEnvironment": boolean,
      "environmentVariables": { 'DEVECO_SDK_HOME'?: string; 'DevEco Studio'?: string },
    },
    "ignoreWorkspaceLocalPropertiesFile": boolean,
    "sdkList": { 'API10'?: string; 'API11'?: string; 'API12'?: string; 'API13'?: string; 'API14'?: string; 'API15'?: string; 'API18'?: string; 'API20'?: string },
  },
}

export interface NestedScopedConfigs {
}

